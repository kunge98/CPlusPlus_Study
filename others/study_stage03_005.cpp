#include <iostream>
using namespace std;

int main(){
    cout << "hello" << endl;
}

/*
1.内存分区模型
主要分为了4个区域：代码区、全局区、栈区、堆区，赋予不同的生命周期，编程更加灵活
程序运行前：
    （1）代码区：存放的二进制代码，exe可执行程序，特点：共享和只读

    （2）全局区：全局变量（函数体外）、静态变量（在static普通变量前面加）、常量（字符串、全局const修饰变量）
        不在全局区：局部变量、局部常量（const修饰的局部变量不在全局区域中）
        特点：数据在程序结束之后有操作系统释放

程序运行后：

    （3）栈区：存放的是：函数的参数，局部变量；
        注意：数据是由编译器自动分配和释放，所以不要返回局部变量的地址，会报错

    （4）堆区：程序员分配和释放，程序结束时由操作系统回收，
        在C++中主要利用new在堆区开辟内存，使用delete释放内存
        创建 int *p = new int (10);
        new返回的是该数据类型的指针
        创建一个整型数据10，使用new开辟了一个堆区内存，定义一个指针实际上指向了堆区的地址，所以不同于栈区，
        释放内存 delete p;

        堆区开辟数组,区别在于小括号、中括号
        创建注意使用中括号，int *arr = new int [10];
        销毁时要加上中括号代表一个连续的区间，delete[] arr;

*/
